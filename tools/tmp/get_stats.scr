#!/bin/tcsh
# AWW-2003
# calculate spatial statistics a forecast run relative to a climatology run
# uses fcst_stats.pl
# calculates additive, mult. anoms, and percentile of fcst wrt clim - for swe & sm

# AWW-aug07:  modified to calculate percentiles for SM1, SM2, SM3 as well
# TJB-nov07:  modified to work on cluster for multimodel, for SM only

set MODEL  = $1 # (vic noah sac clm)
set CURRYR = $2 # 2005
set MON    = $3 # 4
set DAY    = $4 # 16

set ROOT_DIR = /raid8/forecast/sw_monitor
set COMMON = /raid8/forecast/common

set DATE = $CURRYR$MON$DAY

set BAS = conus
set BAS_CAPS = CONUS

set OUTD = $ROOT_DIR/data/$BAS/spatial/xyzz.all/$DATE
mkdir $OUTD
set LONLAT = $COMMON/$BAS_CAPS.5.lonlat.maskorder
set FLIST = $COMMON/$BAS_CAPS.5.fluxfiles.maskorder
set OBSPATH = $ROOT_DIR/data/$BAS/results/dly_wb.5.1915-2004/nc

set SYR = 1920
set EYR = 2003

set CURRPATH = $ROOT_DIR/data/$BAS/results/curr_spinup/$MODEL/asc
set SMFILE = $OUTD/$BAS.$MODEL.sm.curr-srt_hist

echo $CURRPATH $SMFILE $OUTD/curr

echo -n >! $SMFILE
echo -n >! $OUTD/curr

# get current & historic distribution for sm & snow for specified date, sorted
set h = 1
foreach F (`cat $FLIST`)
  set OFILE = $OBSPATH/$F
  set CFILE = $CURRPATH/$F
  echo $h $OFILE:t

  # current day's sm
  # assume format for non-vic models is yyyy mm dd hh qs qsb swe sm1 sm2 sm3 sm4 ...
  if ($MODEL == "vic") then
    awk '{if($1=='$CURRYR' && $2*1=='$MON' && $3*1=='$DAY')print $9+$10+$11}' $CFILE >> $OUTD/curr
  elsif ($MODEL == "noah") then
    awk '{if($1=='$CURRYR' && $2*1=='$MON' && $3*1=='$DAY')print $8+$9+$10+$11}' $CFILE >> $OUTD/curr
  elsif ($MODEL == "sac") then
    awk '{if($1=='$CURRYR' && $2*1=='$MON' && $3*1=='$DAY')print $8+$9+$10+$11+$12}' $CFILE >> $OUTD/curr
  elsif ($MODEL == "clm") then
    awk '{if($1=='$CURRYR' && $2*1=='$MON' && $3*1=='$DAY')print $8+$9+$10+$11+$12+$13+$14+$15+$16+$17}' $CFILE >> $OUTD/curr
  endif

  # climatological sm distributions
  # assume format for non-vic models is yyyy mm prcp evap qs qsb sm1 sm2 sm3 sm4 ...
  if ($MODEL == "vic") then
    awk '{if(($1>='$SYR'&&$1<='$EYR') && $2*1=='$MON')print $9+$10+$11}' $OFILE > $OUTD/tmp
  elsif ($MODEL == "noah") then
    awk '{if(($1>='$SYR'&&$1<='$EYR') && $2*1=='$MON')print $7+$8+$9+$10}' $OFILE > $OUTD/tmp
  elsif ($MODEL == "sac") then
    awk '{if(($1>='$SYR'&&$1<='$EYR') && $2*1=='$MON')print $7+$8+$9+$10+$11}' $OFILE > $OUTD/tmp
  elsif ($MODEL == "clm") then
    awk '{if(($1>='$SYR'&&$1<='$EYR') && $2*1=='$MON')print $7+$8+$9+$10+$11+$12+$13+$14+$15+$16}' $OFILE > $OUTD/tmp
  endif
  awk '{print $1}' $OUTD/tmp | sort -n | awk '{printf(" %s",$1)}END{printf("\n")}' >> $SMFILE

  @ h ++
end

awk '{print $1}' $OUTD/curr > $OUTD/sm
paste $OUTD/sm $SMFILE > $OUTD/t
mv $OUTD/t $SMFILE

\rm $OUTD/sm $OUTD/tmp $OUTD/curr

# calculate quantiles and anomalies ------------------------------
$ROOT_DIR/tools/fcst_stats.pl $SMFILE $OUTD/sm.$BAS.$MODEL.stats
paste $LONLAT $OUTD/sm.$BAS.$MODEL.stats > $OUTD/sm.$BAS.$MODEL.f-c_mean.a-m_anom.qnt.xyzz
\rm -f $OUTD/*.stats

gzip $OUTD/*hist
